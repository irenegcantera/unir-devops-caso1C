pipeline {
    agent any
    stages {
        
        // Etapa “Get Code” para descargar el código, de la rama master
        stage('Get Code'){
            
            steps{
                
                dir("application") {
                    echo 'Descarga código fuente de la rama master'
                    git branch: 'master', url: 'https://github.com/irenegcantera/unir-devops-caso1C.git'
                }
                
                dir("config") {
                    echo 'Descarga configuración código fuente de la rama production'
                    git branch: 'production', url: 'https://github.com/irenegcantera/todo-list-aws-config.git'
                }
                
            }
            
        }

        //  Etapa “Set Up” para descargar librerías necesarias
        stage('SetUp'){
            
            steps{
                echo 'Setup Virtualenv for testing'
                sh "bash /var/lib/jenkins/workspace/todo-list-aws-CD/application/pipelines/PIPELINE-FULL-STAGING/setup.sh"
            }
            
        }
        
        // Etapa de despliegue SAM (“Deploy”) stack production
        stage('Deploy'){
            
            steps{
                
                echo 'Despliegue SAM'
                sh ''' 
                    sam build --config-file /var/lib/jenkins/workspace/todo-list-aws-CD/config/samconfig.toml --template-file /var/lib/jenkins/workspace/todo-list-aws-CD/application/template.yaml
                    sam validate --region us-east-1 --template-file /var/lib/jenkins/workspace/todo-list-aws-CD/application/template.yaml
                    sam deploy --force-upload --stack-name todo-list-aws-production --region us-east-1 --resolve-s3 --config-env production --config-file /var/lib/jenkins/workspace/todo-list-aws-CD/config/samconfig.toml --template-file /var/lib/jenkins/workspace/todo-list-aws-CD/application/template.yaml --no-fail-on-empty-changeset --no-confirm-changeset | tee url_output.txt
                '''
                
            }
            
        }
        
        // Etapa “Rest Test” para la ejecución de las pruebas de integración
        stage('Rest Test'){
            
            steps{
                
                script {
                    def BASE_URL = sh( script: "aws cloudformation describe-stacks --stack-name todo-list-aws-production --query 'Stacks[0].Outputs[?OutputKey==`BaseUrlApi`].OutputValue' --region us-east-1 --output text", returnStdout: true)
            		echo "${BASE_URL}"
            		sh 'chmod +x /var/lib/jenkins/workspace/todo-list-aws-CD/application/pipelines/common-steps/tests.sh'
                    def INTEGRATION = sh( script: "/var/lib/jenkins/workspace/todo-list-aws-CD/application/pipelines/common-steps/tests.sh ${BASE_URL}", returnStdout: true)
                }

                echo 'Ejecución de las pruebas de integración'
                catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
            		sh '''pytest --junitxml=application/test/integration/result-rest.xml -k "not deletetodo and not updatetodo and not addtodo" -s application/test/integration/todoApiTest.py'''
        		}
        		
            }
        }

    }
    
    post { 
	    always { 
	         echo 'Elimir stack creado'
	         sh "aws cloudformation delete-stack --stack-name todo-list-aws-production"
		     echo 'Borrar WORKSPACE'
		     cleanWs()
	    }
	}
}
